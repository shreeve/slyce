#!/usr/bin/env ruby

STDOUT.sync = true

VERSION="0.0.2"

require "bundler/setup"
require "mysql2"
require "optparse"

dbas = nil
tabl = nil

OptionParser.new.instance_eval do
  @banner  = "usage: #{program_name} [options] <database> <table>"

  on "-c", "--columns"                , "Display column names and quit"
  on "-h", "--help"                   , "Show help and command usage" do Kernel.abort to_s; end
  on "-s", "--show <count>"           , "Show this many values", Integer
  on "-v", "--version"                , "Show version number" do Kernel.abort "#{program_name} #{VERSION}"; end
  on "-x", "--extract <col1,col2,...>", "Comma separated list of columns to extract"

  self
end.parse!(into: opts={}) rescue abort($!.message)

show = opts[:show]
keep = opts[:extract].to_s.downcase.split(",")

dbas ||= ARGV.shift or Kernel.abort "no database given"
tabl ||= ARGV.shift or Kernel.abort "no table given"

# ==[ Helpers ]==

class Mysql2::Client
  def query!(stmt, *args, **, &)
    puts "\n==[ SQL statement ]==\n\n", stmt, ";"
    query(stmt, *args, **, &)
  end
end

# ==[ Let 'er rip! ]==

conn = Mysql2::Client.new(database: dbas, as: :array)
resu = conn.query("select * from `#{tabl}` limit 0")
cols = resu.fields

if opts[:columns]
  puts cols
  exit
end
